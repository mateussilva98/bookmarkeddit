version: "3.8"

services:
  client:
    image: bookmarkeddit-client:latest
    build:
      context: ./app
      dockerfile: Dockerfile
    env_file:
      - ./app/.env.production
    deploy:
      replicas: 3
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
    networks:
      - app-network

  server:
    image: bookmarkeddit:latest
    build:
      context: ./server
      dockerfile: Dockerfile
    # Use Docker secrets for sensitive config, mount as REDDIT_CLIENT_ID and REDDIT_CLIENT_SECRET
    secrets:
      - source: CLIENT_ID
        target: REDDIT_CLIENT_ID
      - source: CLIENT_SECRET
        target: REDDIT_CLIENT_SECRET
    deploy:
      replicas: 5
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
    environment:
      - NODE_ENV=production
    networks:
      - app-network

  # Uncomment the following section if you want to use Nginx as a reverse proxy - it was replaced by Caddy - keep in mind that with ngix you need to manage SSL certificates yourself or set up a cron job to renew them weith certbot (letsencrypt)
  #nginx:
  #  image: nginx:latest
  #  ports:
  #    - "80:80"
  #    - "443:443"
  #  volumes:
  #    - ./nginx/conf.d:/etc/nginx/conf.d
  #    - ./nginx/ssl:/etc/nginx/ssl
  #  depends_on:
  #    - server
  #    - client
  #  deploy:
  #    replicas: 1
  #    placement:
  #      constraints: [node.role == manager]
  #  networks:
  #    - app-network

  caddy:
    image: caddy:2
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - server
      - client
    networks:
      - app-network

  plausible_db:
    image: postgres:14-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: plausible_db
      POSTGRES_USER_FILE: /run/secrets/PLAUSIBLE_POSTGRES_USER
      POSTGRES_PASSWORD_FILE: /run/secrets/PLAUSIBLE_POSTGRES_PASSWORD
    volumes:
      - plausible_db_data:/var/lib/postgresql/data
    networks:
      - app-network
    secrets:
      - PLAUSIBLE_POSTGRES_USER
      - PLAUSIBLE_POSTGRES_PASSWORD

  plausible_events_db:
    image: clickhouse/clickhouse-server:22.3-alpine
    restart: unless-stopped
    environment:
      CLICKHOUSE_DB: plausible_events_db
      CLICKHOUSE_USER_FILE: /run/secrets/PLAUSIBLE_CLICKHOUSE_USER
      CLICKHOUSE_PASSWORD_FILE: /run/secrets/PLAUSIBLE_CLICKHOUSE_PASSWORD
    volumes:
      - plausible_events_db_data:/var/lib/clickhouse
    networks:
      - app-network
    secrets:
      - PLAUSIBLE_CLICKHOUSE_USER
      - PLAUSIBLE_CLICKHOUSE_PASSWORD

  # plausible_mail:
  #   image: bytemark/smtp
  #   restart: unless-stopped
  #   networks:
  #     - app-network

  plausible:
    image: plausible/analytics:latest
    restart: unless-stopped
    entrypoint: ["/plausible-entrypoint.sh"]
    depends_on:
      - plausible_db
      - plausible_events_db
      - plausible_mail
    environment:
      - BASE_URL=https://analytics.bookmarkeddit.com
      - SECRET_KEY_FILE=/run/secrets/PLAUSIBLE_SECRET_KEY
      - ANONYMIZE_IP=true
      - DISABLE_REGISTRATION=true
    # DATABASE_URL and CLICKHOUSE_DATABASE_URL are set by entrypoint script
    networks:
      - app-network
    volumes:
      - ./plausible-entrypoint.sh:/plausible-entrypoint.sh:ro
    secrets:
      - PLAUSIBLE_POSTGRES_USER
      - PLAUSIBLE_POSTGRES_PASSWORD
      - PLAUSIBLE_CLICKHOUSE_USER
      - PLAUSIBLE_CLICKHOUSE_PASSWORD
      - PLAUSIBLE_SECRET_KEY

networks:
  app-network:
    driver: overlay

volumes:
  caddy_data:
  caddy_config:
  plausible_db_data:
  plausible_events_db_data:

secrets:
  PLAUSIBLE_POSTGRES_USER:
    external: true
  PLAUSIBLE_POSTGRES_PASSWORD:
    external: true
  PLAUSIBLE_CLICKHOUSE_USER:
    external: true
  PLAUSIBLE_CLICKHOUSE_PASSWORD:
    external: true
  PLAUSIBLE_SECRET_KEY:
    external: true
  CLIENT_ID:
    external: true
  CLIENT_SECRET:
    external: true
