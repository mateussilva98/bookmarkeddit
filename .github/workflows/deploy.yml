name: Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

      - name: Ensure deploy directory exists on VPS
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "mkdir -p ${{ secrets.VPS_DEPLOY_PATH }}"

      - name: Copy docker-compose and env files to VPS
        run: |
          scp -o StrictHostKeyChecking=no docker-compose.yml Caddyfile ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:${{ secrets.VPS_DEPLOY_PATH }}/

      - name: Remove stack before updating secrets
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "docker stack rm bookmarkeddit || true && sleep 10"

      - name: Remove old local secret directories on VPS (if any)
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "rm -rf ${{ secrets.VPS_DEPLOY_PATH }}/secrets/PLAUSIBLE_POSTGRES_USER ${{ secrets.VPS_DEPLOY_PATH }}/secrets/PLAUSIBLE_POSTGRES_PASSWORD ${{ secrets.VPS_DEPLOY_PATH }}/secrets/PLAUSIBLE_CLICKHOUSE_USER ${{ secrets.VPS_DEPLOY_PATH }}/secrets/PLAUSIBLE_CLICKHOUSE_PASSWORD ${{ secrets.VPS_DEPLOY_PATH }}/secrets/PLAUSIBLE_SECRET_KEY || true"

      - name: Ensure Docker secrets exist on VPS
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "\
            docker secret rm CLIENT_ID 2>/dev/null || true; \
            echo '${{ secrets.SERVER_CLIENT_ID }}' | docker secret create CLIENT_ID -; \
            docker secret rm CLIENT_SECRET 2>/dev/null || true; \
            echo '${{ secrets.SERVER_CLIENT_SECRET }}' | docker secret create CLIENT_SECRET -; \
            docker secret rm PLAUSIBLE_POSTGRES_USER 2>/dev/null || true; \
            echo '${{ secrets.PLAUSIBLE_POSTGRES_USER }}' | docker secret create PLAUSIBLE_POSTGRES_USER -; \
            docker secret rm PLAUSIBLE_POSTGRES_PASSWORD 2>/dev/null || true; \
            echo '${{ secrets.PLAUSIBLE_POSTGRES_PASSWORD }}' | docker secret create PLAUSIBLE_POSTGRES_PASSWORD -; \
            docker secret rm PLAUSIBLE_CLICKHOUSE_USER 2>/dev/null || true; \
            echo '${{ secrets.PLAUSIBLE_CLICKHOUSE_USER }}' | docker secret create PLAUSIBLE_CLICKHOUSE_USER -; \
            docker secret rm PLAUSIBLE_CLICKHOUSE_PASSWORD 2>/dev/null || true; \
            echo '${{ secrets.PLAUSIBLE_CLICKHOUSE_PASSWORD }}' | docker secret create PLAUSIBLE_CLICKHOUSE_PASSWORD -; \
            docker secret rm PLAUSIBLE_SECRET_KEY 2>/dev/null || true; \
            echo '${{ secrets.PLAUSIBLE_SECRET_KEY }}' | docker secret create PLAUSIBLE_SECRET_KEY -; \
          "

      - name: Ensure repo is cloned on VPS
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "if [ ! -d '${{ secrets.VPS_DEPLOY_PATH }}/.git' ]; then rm -rf '${{ secrets.VPS_DEPLOY_PATH }}'; git clone https://github.com/${{ github.repository }} ${{ secrets.VPS_DEPLOY_PATH }}; fi"

      - name: Make plausible entrypoint script executable on VPS
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "chmod 755 ${{ secrets.VPS_DEPLOY_PATH }}/plausible-entrypoint.sh"

      - name: Create app/.env.production on VPS
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "mkdir -p ${{ secrets.VPS_DEPLOY_PATH }}/app && echo 'VITE_API_URL=/api' > ${{ secrets.VPS_DEPLOY_PATH }}/app/.env.production && echo 'VITE_REDIRECT_URI=https://bookmarkeddit.com/login/callback' >> ${{ secrets.VPS_DEPLOY_PATH }}/app/.env.production && echo 'VITE_CLIENT_ID=${{ secrets.SERVER_CLIENT_ID }}' >> ${{ secrets.VPS_DEPLOY_PATH }}/app/.env.production"

      - name: Ensure Docker Swarm is initialized
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "docker info | grep 'Swarm: active' || docker swarm init"

      - name: Build server and client images on VPS
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "cd ${{ secrets.VPS_DEPLOY_PATH }} && docker build -t bookmarkeddit:latest -f server/Dockerfile server && docker build -t bookmarkeddit-client:latest -f app/Dockerfile app"

      - name: Deploy with Docker Swarm
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "cd ${{ secrets.VPS_DEPLOY_PATH }} && git fetch --all && git reset --hard ${{ github.sha }} && docker stack deploy -c docker-compose.yml bookmarkeddit"

# Required GitHub secrets:
# VPS_HOST, VPS_USER, VPS_SSH_KEY, VPS_DEPLOY_PATH
# SERVER_CLIENT_ID, SERVER_CLIENT_SECRET
