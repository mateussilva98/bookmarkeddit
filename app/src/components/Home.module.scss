.container {
  position: relative;
  min-height: 100vh;
  width: 100%;
  background: radial-gradient(
      circle at 10% 10%,
      rgba(255, 69, 0, 0.04) 0%,
      transparent 30%
    ),
    radial-gradient(
      circle at 90% 20%,
      rgba(0, 121, 211, 0.04) 0%,
      transparent 30%
    ),
    radial-gradient(
      circle at 50% 50%,
      rgba(255, 69, 0, 0.03) 0%,
      transparent 70%
    ),
    radial-gradient(
      circle at 80% 80%,
      rgba(0, 121, 211, 0.03) 0%,
      transparent 50%
    ),
    linear-gradient(135deg, var(--bg-primary) 0%, rgba(255, 69, 0, 0.04) 100%);
  overflow-x: hidden;
}

.icon {
  position: absolute;
  right: 1rem;
  top: 1rem;
  z-index: 10;
}

.main {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  gap: 3rem;
  min-height: 100vh;
  padding: 2rem;
  text-align: center;
  overflow-y: auto;
}

.heroSection {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-top: 3rem;
  position: relative;
  width: 100%;
  max-width: 900px;

  &::before {
    content: "";
    position: absolute;
    top: -80px;
    right: 0; // Changed from -150px to 0
    width: 300px; // Reduced from 400px
    height: 300px; // Reduced from 400px
    background: radial-gradient(
      circle,
      rgba(255, 69, 0, 0.1) 0%,
      transparent 70%
    );
    border-radius: 50%;
    z-index: -1;
    filter: blur(40px);
    pointer-events: none; // Added to prevent interaction issues
    max-width: 50vw; // Added to ensure it scales with viewport
  }

  &::after {
    content: "";
    position: absolute;
    bottom: -150px;
    left: 0; // Changed from -100px to 0
    width: 250px; // Reduced from 350px
    height: 250px; // Reduced from 350px
    background: radial-gradient(
      circle,
      rgba(0, 121, 211, 0.1) 0%,
      transparent 70%
    );
    border-radius: 50%;
    z-index: -1;
    filter: blur(40px);
    pointer-events: none; // Added to prevent interaction issues
    max-width: 50vw; // Added to ensure it scales with viewport
  }

  .logo {
    transform: scale(1.8);
    margin-bottom: 2.5rem;
    filter: drop-shadow(0 10px 15px rgba(0, 0, 0, 0.1));
  }

  .title {
    font-size: 2.5rem;
    font-weight: 700;
    margin-bottom: 1rem;
    background: linear-gradient(
      90deg,
      var(--orange) 0%,
      var(--orange-light, #ff7b4a) 100%
    );
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    max-width: 800px;
    line-height: 1.2;
  }

  .subtitle {
    font-size: 1.2rem;
    color: var(--color-secondary);
    max-width: 600px;
    margin-bottom: 2rem;
  }
}

.loginButton {
  background: linear-gradient(
    90deg,
    var(--orange) 0%,
    var(--orange-light, #ff7b4a) 100%
  );
  font-weight: 700;
  padding: 2rem 3rem;
  font-size: 1.25rem;
  margin: 1.5rem 0;
  border-radius: 12px;
  box-shadow: 0 8px 25px rgba(255, 69, 0, 0.35);
  transition: all 0.3s ease;
  letter-spacing: 0.5px;

  &:hover {
    transform: translateY(-3px);
    box-shadow: 0 12px 30px rgba(255, 69, 0, 0.45);
  }

  &:active {
    transform: translateY(0);
  }
}

.featuresSection {
  max-width: 1000px;
  width: 100%;

  h2 {
    font-size: 1.8rem;
    margin-bottom: 2rem;
    position: relative;
    display: inline-block;

    &::after {
      content: "";
      position: absolute;
      bottom: -10px;
      left: 50%;
      transform: translateX(-50%);
      width: 60px;
      height: 3px;
      background: var(--orange);
      border-radius: 3px;
    }
  }
}

.featuresGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
  gap: 1.5rem;
  margin-top: 1rem;
}

.featureCard {
  background: rgba(var(--bg-secondary-rgb, 30, 30, 30), 0.7);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border-radius: 16px;
  padding: 1.8rem;
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.08),
    inset 0 0 0 1px rgba(255, 255, 255, 0.05);
  transition: box-shadow 0.3s ease;
  border: none;
  position: relative;
  overflow: hidden;
  transform-style: preserve-3d;
  transform: perspective(1000px) rotateX(0deg) rotateY(0deg);
  will-change: transform;

  // Use different styling for light mode
  :global(body.light) & {
    background: rgba(255, 255, 255, 0.85);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.05),
      inset 0 0 0 1px rgba(0, 0, 0, 0.05);
  }

  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 4px;
    background: linear-gradient(
      90deg,
      var(--orange) 0%,
      var(--orange-light, #ff7b4a) 100%
    );
    transform: translateZ(10px);
  }

  &::after {
    content: "";
    position: absolute;
    top: 4px;
    left: 0;
    right: 0;
    bottom: 0;
    border-radius: 0 0 16px 16px;
    box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
    pointer-events: none;
    transform: translateZ(5px);

    // Different inner shadow for light mode
    :global(body.light) & {
      box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.05);
    }
  }

  &:hover {
    box-shadow: 0 15px 30px rgba(0, 0, 0, 0.2),
      inset 0 0 0 1px rgba(255, 255, 255, 0.1), 0 0 20px rgba(255, 69, 0, 0.15);

    // Different hover shadow for light mode
    :global(body.light) & {
      box-shadow: 0 15px 30px rgba(0, 0, 0, 0.08),
        inset 0 0 0 1px rgba(0, 0, 0, 0.05), 0 0 20px rgba(255, 69, 0, 0.1);
    }
  }

  .featureIcon {
    font-size: 3rem;
    margin-bottom: 1.2rem;
    display: block;
    filter: drop-shadow(0 4px 6px rgba(0, 0, 0, 0.1));
    transform: translateZ(30px);

    svg {
      color: var(--orange);
      width: 40px;
      height: 40px;
    }
  }

  h3 {
    font-size: 1.3rem;
    margin-bottom: 0.9rem;
    color: var(--color-primary);
    font-weight: 600;
    transform: translateZ(25px);
  }

  p {
    color: var(--color-secondary);
    line-height: 1.6;
    font-size: 0.95rem;
    transform: translateZ(20px);
  }

  // Shine effect adjustment for light mode
  .shine {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      135deg,
      rgba(255, 255, 255, 0) 0%,
      rgba(255, 255, 255, 0.03) 50%,
      rgba(255, 255, 255, 0) 100%
    );
    pointer-events: none;
    transform: translateZ(2px);

    :global(body.light) & {
      background: linear-gradient(
        135deg,
        rgba(255, 255, 255, 0) 0%,
        rgba(255, 255, 255, 0.2) 50%,
        rgba(255, 255, 255, 0) 100%
      );
    }
  }
}

.permissions {
  max-width: 700px;
  width: 100%;
  background-color: var(--bg-secondary);
  padding: 2rem;
  border-radius: 12px;
  border: var(--border);
  margin-bottom: 3rem;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);

  h3 {
    font-size: 1.4rem;
    margin-bottom: 1.5rem;
    color: var(--color-primary);
    position: relative;
    display: inline-block;

    &::after {
      content: "";
      position: absolute;
      bottom: -8px;
      left: 0;
      width: 40px;
      height: 3px;
      background: var(--orange);
      border-radius: 3px;
    }
  }
}

.permissionsList {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  margin-bottom: 1.5rem;
}

.permissionItem {
  display: flex;
  text-align: left;
  align-items: center;

  .permissionName {
    background-color: rgba(255, 69, 0, 0.1);
    padding: 0.4rem 0.75rem;
    border-radius: 6px;
    color: var(--orange);
    font-family: monospace;
    min-width: 90px;
    margin-right: 1.5rem;
    font-weight: 600;
    border: 1px solid rgba(255, 69, 0, 0.2);
  }

  .permissionDesc {
    color: var(--color-secondary);
    line-height: 1.5;
  }
}

.privacyNote {
  font-size: 0.95rem;
  color: var(--color-secondary);
  font-style: italic;
  line-height: 1.6;
  position: relative;
  padding-left: 25px;

  &::before {
    content: "ðŸ”’";
    position: absolute;
    left: 0;
    top: 0;
  }
}

.loader {
  border: 4px solid rgba(255, 69, 0, 0.1);
  border-left-color: var(--orange);
  border-radius: 50%;
  width: 50px;
  height: 50px;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

// Media Queries for Responsive Design
@media (max-width: 768px) {
  .main {
    padding: 1.5rem;
    gap: 2rem;
  }

  .heroSection {
    margin-top: 2rem;

    .logo {
      transform: scale(1.5);
      margin-bottom: 2rem;
    }

    .title {
      font-size: 1.8rem;
    }

    .subtitle {
      font-size: 1rem;
    }
  }

  .featuresGrid {
    grid-template-columns: 1fr;
  }

  .featuresSection h2 {
    font-size: 1.5rem;
  }

  .permissions {
    padding: 1.5rem;
  }

  .permissionItem {
    flex-direction: column;
    align-items: flex-start;
    gap: 0.5rem;

    .permissionName {
      margin-right: 0;
    }
  }
}

// Add CSS variable for background color RGB values to support the glass effect
:global(:root) {
  --bg-secondary-rgb: 30, 30, 30;
}

:global(body.light) {
  --bg-secondary-rgb: 245, 245, 245;
}
