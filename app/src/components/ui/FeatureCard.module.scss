.featureCard {
  background: rgba(var(--bg-secondary-rgb, 30, 30, 30), 0.7);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border-radius: 16px;
  padding: 1.8rem;
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.08),
    inset 0 0 0 1px rgba(255, 255, 255, 0.05);
  transition: box-shadow 0.3s ease;
  border: none;
  position: relative;
  overflow: hidden;
  transform-style: preserve-3d;
  transform: perspective(1000px) rotateX(0deg) rotateY(0deg);
  will-change: transform;

  // Use different styling for light mode
  :global(body.light) & {
    background: rgba(255, 255, 255, 0.85);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.05),
      inset 0 0 0 1px rgba(0, 0, 0, 0.05);
  }

  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 4px;
    background: linear-gradient(
      90deg,
      var(--orange) 0%,
      var(--orange-light, #ff7b4a) 100%
    );
    transform: translateZ(10px);
  }

  &::after {
    content: "";
    position: absolute;
    top: 4px;
    left: 0;
    right: 0;
    bottom: 0;
    border-radius: 0 0 16px 16px;
    box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
    pointer-events: none;
    transform: translateZ(5px);

    // Different inner shadow for light mode
    :global(body.light) & {
      box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.05);
    }
  }

  &:hover {
    box-shadow: 0 15px 30px rgba(0, 0, 0, 0.2),
      inset 0 0 0 1px rgba(255, 255, 255, 0.1), 0 0 20px rgba(255, 69, 0, 0.15);

    // Different hover shadow for light mode
    :global(body.light) & {
      box-shadow: 0 15px 30px rgba(0, 0, 0, 0.08),
        inset 0 0 0 1px rgba(0, 0, 0, 0.05), 0 0 20px rgba(255, 69, 0, 0.1);
    }
  }

  .featureIcon {
    font-size: 3rem;
    margin-bottom: 1.2rem;
    display: block;
    filter: drop-shadow(0 4px 6px rgba(0, 0, 0, 0.1));
    transform: translateZ(30px);

    svg {
      color: var(--orange);
      width: 40px;
      height: 40px;
    }
  }

  h3 {
    font-size: 1.3rem;
    margin-bottom: 0.9rem;
    color: var(--color-primary);
    font-weight: 600;
    transform: translateZ(25px);
  }

  p {
    color: var(--color-secondary);
    line-height: 1.6;
    font-size: 0.95rem;
    transform: translateZ(20px);
  }

  // Shine effect adjustment for light mode
  .shine {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      135deg,
      rgba(255, 255, 255, 0) 0%,
      rgba(255, 255, 255, 0.03) 50%,
      rgba(255, 255, 255, 0) 100%
    );
    pointer-events: none;
    transform: translateZ(2px);

    :global(body.light) & {
      background: linear-gradient(
        135deg,
        rgba(255, 255, 255, 0) 0%,
        rgba(255, 255, 255, 0.2) 50%,
        rgba(255, 255, 255, 0) 100%
      );
    }
  }
}
