/* Add styles for the main layout */
.root {
  display: flex;
  flex-direction: column;
  height: calc(
    100vh - var(--header-height, 60px)
  ); /* Use CSS variable with fallback */
  width: 100%;
  box-sizing: border-box;
  overflow-x: hidden; /* Prevent horizontal scrolling */
}

/* Background fetching and new posts notification styles */
.notificationBar {
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 8px;
  background-color: var(--bg-secondary);
  border-bottom: var(--border);
  z-index: 10;
}

.backgroundFetching {
  display: flex;
  align-items: center;
  font-size: 0.9rem;
  color: var(--color-secondary);
}

.fetchingSpinner {
  width: 16px;
  height: 16px;
  border: 2px solid transparent;
  border-top-color: var(--color-primary);
  border-radius: 50%;
  margin-right: 8px;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.newPostsNotification {
  display: flex;
  align-items: center;
}

.updateButton {
  background-color: var(--color-primary);
  color: white;
  border: none;
  border-radius: 4px;
  padding: 6px 12px;
  font-size: 0.9rem;
  cursor: pointer;
  transition: background-color 0.2s;

  &:hover {
    background-color: var(--color-primary-hover);
  }
}

/* Main content container */
.mainContent {
  display: flex;
  flex: 1;
  height: calc(100% - 40px); /* Adjust for notification bar */
  width: 100%;
  max-width: 100%;
}

/* Update styles to ensure both Filters and PostsList use 100% height and scroll if content overflows */
.filters {
  width: 250px; /* Fixed width for the sidebar */
  height: 100%; /* Ensure full height */
}

/* Filter toggle button when filters are hidden */
.filtersToggle {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 30px;
  background-color: var(--bg-secondary);
  border-right: var(--border);
  height: 100%;

  .toggleIcon {
    font-size: 16px;
    //color: var(--color-secondary);
  }

  /*  button {
    padding: 6px;
    &:hover {
      background-color: var(--bg-primary);
    }
  } */
}

.postsList {
  flex: 1; /* Take the remaining space */
  height: 100%; /* Ensure full height */
  display: flex;
  flex-direction: column;
  width: 100%; /* Ensure full width */
  max-width: 100%; /* Prevent overflow */
}

/* Error state styling */
.errorContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 2rem;
  text-align: center;
  height: calc(100vh - 60px);

  .errorMessage {
    color: var(--btn-hover-color);
    background-color: rgba(255, 69, 0, 0.1);
    border-radius: 8px;
    border: 1px solid var(--btn-hover-color);
    padding: 1rem 2rem;
    margin-bottom: 1.5rem;
    max-width: 600px;
  }

  .retryButton {
    height: auto;
    font-size: 1rem;
    padding: 0.75rem 2rem;
  }
}

/* Empty state styling */
.emptyState {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 2rem;
  text-align: center;
  height: calc(100vh - 60px);

  h2 {
    color: var(--color-primary);
    margin-bottom: 1rem;
  }

  p {
    color: var(--color-secondary);
  }
}

/* Rate limit retry UI */
.retryContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 1.5rem;
  height: calc(100vh - 60px);
  background-color: var(--bg-primary);
  padding: 2rem;
}

.retryMessage {
  background-color: var(--bg-secondary);
  padding: 2rem;
  border-radius: 8px;
  border: var(--border);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  text-align: center;
  max-width: 500px;

  h3 {
    color: var(--color-primary);
    margin-bottom: 1rem;
    font-size: 1.5rem;
  }

  p {
    color: var(--color-secondary);
    margin-bottom: 1.5rem;
    font-size: 1rem;
    line-height: 1.5;
  }
}

.retryProgress {
  width: 100%;
  height: 10px;
  background-color: var(--bg-primary);
  border-radius: 5px;
  margin-bottom: 1.5rem;
  overflow: hidden;

  .retryProgressBar {
    height: 100%;
    background-color: var(--orange);
    transition: width 1s linear;
  }
}

.retryButtons {
  display: flex;
  gap: 1rem;
  justify-content: center;
  margin-top: 0.5rem;

  button {
    padding: 0.75rem 1.5rem;
    font-size: 1rem;
    height: auto;
  }

  .retryNowButton {
    background-color: var(--orange);

    &:hover {
      background-color: var(--btn-hover-color);
    }
  }

  .cancelButton {
    background-color: transparent;
    border: 1px solid var(--color-secondary);
    color: var(--color-primary);

    &:hover {
      background-color: var(--bg-primary);
      border-color: var(--color-primary);
    }
  }
}

/* Media queries for responsive layout */
@media (max-width: 768px) {
  .notificationBar {
    padding: 6px;
  }

  .backgroundFetching,
  .newPostsNotification {
    font-size: 0.85rem;
  }

  .updateButton,
  .fetchMoreBtn {
    padding: 5px 10px;
    font-size: 0.85rem;
  }

  .filters {
    width: 200px; /* Smaller width on tablets */
  }
}

@media (max-width: 480px) {
  .notificationBar {
    padding: 4px;
  }

  .backgroundFetching,
  .newPostsNotification {
    font-size: 0.8rem;
  }

  .fetchingSpinner {
    width: 14px;
    height: 14px;
    margin-right: 6px;
  }

  .updateButton,
  .fetchMoreBtn {
    padding: 4px 8px;
    font-size: 0.8rem;
  }
  .filters {
    position: static !important; /* Override for mobile filters */
    width: 0 !important; /* No width but still present in the DOM */
    height: 0 !important; /* No height but still present in the DOM */
    overflow: visible !important; /* Allow content to overflow */
    display: block !important; /* Keep displayed */
  }

  .filtersToggle {
    display: none; /* Hide filter toggle on mobile devices */
  }
  .mainContent {
    width: 100%; /* Full width on mobile */
    max-width: 100vw; /* Use viewport width */
  }

  .postsList {
    width: 100%; /* Full width on mobile */
    max-width: 100vw; /* Use viewport width */
    padding: 0;
  }
}
